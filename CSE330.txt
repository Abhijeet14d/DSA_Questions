Q: Write a program to find the sum of n natural numbers?
Q: write a program that took an array of strings, sort each string and then sort the full array. Tell the runtime also?


Q: find the number is prime or not?

#include <iostream>
#include <cmath>
using namespace  std;

bool isprime(int n){
  if(n<=1){
    return false;
  };
  for(int i=2;i<sqrt(n);i++){
    if(n%i==0){
      return false;
    }
  }
  return true; 
}

bool isprimeOptimize(int n){
  if(n<=1){
    return false;
  }
  if(n<=3){
    return true;
  }
  if(n%2==0 || n%3==0){
    return false;
  }
  for(int i=5;i*i<=sqrt(n);i=i+6){
    if(n%i==0 || n%(i+2)==0){
      return false;
    }
  }
  return true;
}

int main(){
  int n;
  cout << "Enter the number: ";
  cin >> n;

  bool x = isprimeOptimize(n);
  if(x) cout << "is prime"<< endl;
  else cout << "not prime"<< endl;
}


Q:
#include <bits/stdc++.h>
using namespace std;

int main(){
  int n;
  cin >> n;
  // fermate facotrization;

  if((n & 1) == 0) { 
      cout<< n / 2.0 << "," << 2 <<endl; 
      return 0; 
  }

  int x = ceil(sqrt(n));
  int y = sqrt(x*x - n);
  cout << x+y << ", " << x-y << endl;
}








#include <iostream>
#include <bits/stdc++.h>
#include <cmath>
using namespace std;

int main(){
  // fermat's little theorem
  int p;
  cout << "Enter the number: ";
  cin >> p;
  int a;
  cout << "Enter the number: ";
  cin >> a;
  __int128 x = pow(a,p-1);
  int y = x%p;
  if(y == 1) cout << "is prime"<< endl; 
  else cout << "not prime"<< endl;
}






#include <iostream>
#include <vector>
using namespace std;

void rowzero(vector<vector<int>> *matrix, int i, int j){
  int row = matrix->size();
  int col = matrix->at(0).size();
  for(int k=0;k<col;k++){
    (*matrix)[i][k] = -1;
  }
}
void colzero(vector<vector<int>> *matrix, int i, int j){
  int row = matrix->size();
  int col = matrix->at(0).size();
  for(int k=0;k<row;k++){
    (*matrix)[k][j] = -1;
  }
}

int main(){
  vector<vector<int>> v = {{1,2,3},{4,5,6},{7,8,0}};
  for(int i=0;i<v.size();i++){
    for(int j=0;j<v[0].size();j++){
      if(v[i][j]==0){
        rowzero(&v,i,j);
        colzero(&v,i,j);
      }
    }
  }  
  // print the matrix
  for(int i=0;i<v.size();i++){
    for(int j=0;j<v[0].size();j++){
      if(v[i][j]==-1){
        cout << "0 ";
      }else{
        cout << v[i][j] << " ";
      }
    }
    cout << endl;
  }
}







#include <bits/stdc++.h>
using namespace std;

bool isPalindrome(int n){
  int temp = n;
  int rev = 0;
  while(temp>0){
    int rem = temp%10;
    rev = rev*10 + rem;
    temp = temp/10;
  }
  if(rev==n){
    return true;
  }
  return false;
}

bool isPrime(int n){
  if(n<=1){
    return false;
  }
  for(int i=2;i<sqrt(n);i++){
    if(n%i==0){
      return false;
    }
  }
  return true;
}

void nextPalindromePrime(int n){
  int i = n;
  while(true){
    i++;
    if(i%2 !=0 &&isPrime(i) && isPalindrome(i)){
      cout << i << endl;
      break;
    }
  }
}

int main(){
  int n;
  cin >> n;

  nextPalindromePrime(n);
}











#include <bits/stdc++.h>
using namespace std;

void segmentedSieve(int n){
  int segmentSize = floor(sqrt(n)) + 1;
  vector<bool> prime(n+1,true);
  prime[0] = prime[1] = false;
  for(int i=2;i<=segmentSize;i++){
    if(prime[i]){
      for(int j=i*i;j<=n;j+=i){
        prime[j] = false;
      }
    }
  }
  for(int i=segmentSize;i<=n;i+=segmentSize){
    if(prime[i]){
      for(int j=i;j<=n;j+=segmentSize){
        prime[j] = false;
      }
    }
  }
  for(int i=0;i<=n;i++){
    if(prime[i]){
      cout << i << " ";
    }
  }
  cout << endl;
}

int main(){
  int n = 100;
  cout << "Prime smaller than: "<< n<< endl;
  segmentedSieve(n);
  return 0;
}










#include <bits/stdc++.h>
using namespace std;

void seiveOfAtkin(int limit){
  int n = limit + 1;
  vector<bool> prime(n,true);
  prime[0] = prime[1] = false;
  for(int x=1;x*x<=n;x++){
    for(int y=1;y*y<=n;y++){
      int n = 4*x*x + y*y;
      if(n<=limit && (n%12==1 || n%12==5)){
        prime[n] = !prime[n];
      }
      n = 3*x*x + y*y;
      if(n<=limit && n%12==7){
        prime[n] = !prime[n];
      }
      n = 3*x*x - y*y;
      if(x>y && n<=limit && n%12==11){
        prime[n] = !prime[n];
      }
    }
  }
  for(int i=5;i<=limit;i++){
    if(!prime[i]){
      cout << i << " ";
    }
  }
  cout << endl;
}

int main(){
  int n;
  cin >> n;

  // seive of atkin

  seiveOfAtkin(n);
}








// seive of eratosthenes
#include <bits/stdc++.h>
using namespace std;

int main(){
  int n;
  cin >> n;
  vector<bool> prime(n+1,true);
  prime[0] = prime[1] = false;
  for(int i=2;i*i<=n;i++){
    if(prime[i]){
      for(int j=i*i;j<=n;j+=i){
        prime[j] = false;
      }
    }
    
  }
  for(int i=0;i<=n;i++){
    if(prime[i]){
      cout << i << " ";
    }
  }
  cout << endl;
  
}
